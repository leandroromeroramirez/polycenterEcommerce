version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        WWWGROUP: '${WWWGROUP:-1000}'
        WWWUSER: '${WWWUSER:-1000}'
    image: bagisto-app:latest
    container_name: bagisto_app
    restart: unless-stopped
    ports:
      - "${APP_PORT:-80}:80"
      - "${VITE_PORT:-5173}:5173"
    environment:
      WWWUSER: '${WWWUSER:-1000}'
      APP_NAME: '${APP_NAME:-Bagisto}'
      APP_ENV: '${APP_ENV:-production}'
      APP_DEBUG: '${APP_DEBUG:-false}'
      APP_URL: '${APP_URL:-http://localhost}'
      APP_KEY: '${APP_KEY}'
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: '${DB_DATABASE:-bagisto}'
      DB_USERNAME: '${DB_USERNAME:-bagisto}'
      DB_PASSWORD: '${DB_PASSWORD:-secret}'
      REDIS_HOST: redis
      REDIS_PORT: 6379
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      QUEUE_CONNECTION: redis
      BROADCAST_DRIVER: redis
      SCOUT_DRIVER: elasticsearch
      ELASTICSEARCH_HOST: 'elasticsearch:9200'
      MAIL_MAILER: '${MAIL_MAILER:-smtp}'
      MAIL_HOST: '${MAIL_HOST:-mailpit}'
      MAIL_PORT: '${MAIL_PORT:-1025}'
    volumes:
      - app-storage:/var/www/html/storage/app
      - app-logs:/var/www/html/storage/logs
      - app-cache:/var/www/html/storage/framework
    networks:
      - bagisto
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  mysql:
    image: 'mysql/mysql-server:8.0'
    container_name: bagisto_mysql
    restart: unless-stopped
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD:-secret}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: '${DB_DATABASE:-bagisto}'
      MYSQL_USER: '${DB_USERNAME:-bagisto}'
      MYSQL_PASSWORD: '${DB_PASSWORD:-secret}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/10-init.sql:ro
    networks:
      - bagisto
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD:-secret}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  redis:
    image: 'redis:alpine'
    container_name: bagisto_redis
    restart: unless-stopped
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD:-}"
    volumes:
      - redis-data:/data
    networks:
      - bagisto
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: bagisto_elasticsearch
    restart: unless-stopped
    ports:
      - '${FORWARD_ES_PORT:-9200}:9200'
      - '9300:9300'
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - bagisto
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -vq '\"status\":\"red\"'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    container_name: bagisto_kibana
    restart: unless-stopped
    ports:
      - '${FORWARD_KIBANA_PORT:-5601}:5601'
    environment:
      ELASTICSEARCH_HOSTS: 'http://elasticsearch:9200'
    networks:
      - bagisto
    depends_on:
      elasticsearch:
        condition: service_healthy
    profiles:
      - analytics

  mailpit:
    image: 'axllent/mailpit:latest'
    container_name: bagisto_mailpit
    restart: unless-stopped
    ports:
      - '${FORWARD_MAILPIT_PORT:-1025}:1025'
      - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
    networks:
      - bagisto
    profiles:
      - mail

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local
  elasticsearch-data:
    driver: local
  app-storage:
    driver: local
  app-logs:
    driver: local
  app-cache:
    driver: local

networks:
  bagisto:
    driver: bridge
